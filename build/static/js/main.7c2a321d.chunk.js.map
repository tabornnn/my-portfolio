{"version":3,"sources":["components/listItems.js","components/common/Title.js","components/home/PaperItem.js","components/home/MyPicture.js","components/home/Home.js","components/loadJobChange/LeftContent.js","components/loadJobChange/CenterContent.js","components/loadJobChange/RightContent.js","components/loadJobChange/LoadJobChange.js","components/skills/Skills.js","components/chatbot/Chatbot.js","components/Entire.js","App.js","reportWebVitals.js","index.js"],"names":["homeObj","loadObj","skillsObj","botObj","MainListItems","props","ListItem","button","onClick","updateStateFunc","ListItemIcon","ListItemText","primary","Title","Typography","component","variant","color","gutterBottom","children","PaperItem","name","Fragment","paragraph","href","useStyles","makeStyles","theme","imgStyle","width","maxWidth","height","MyPicture","classes","className","src","process","alt","paper","padding","spacing","display","flexDirection","margin","justifyContent","marginLeft","marginRight","myPicture","marginTop","fixedPaper","paperHalf","flexContainer","Home","clsx","fixedHeightPaper","Grid","container","item","xs","md","lg","Paper","Card","CardContent","CardActions","Button","size","maxHeight","backgroundColor","palette","background","border","boxShadow","shadows","overflow","root","media","p","textIndent","LeftContent","React","forwardRef","ref","CenterContent","RightContent","icon","heroContent","heroButtons","cardGrid","paddingTop","paddingBottom","card","cardMedia","cardContent","flexGrow","modal","alignItems","LoadJobChange","useState","openLeft","setOpenLeft","openCenter","setOpenCenter","openRight","setOpenRight","CssBaseline","Container","align","sm","CardMedia","image","title","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","createData","element","level","explain","levelDef","Rating","value","max","readOnly","frontRows","backRows","toolRows","table","minWidth","Skills","Table","TableHead","TableRow","TableCell","table_explain","TableBody","map","row","paymentMethod","amount","drawerWidth","toolbar","mixins","drawerPaper","appBarSpacer","content","appBar","breakpoints","up","menuButton","drawer","flexShrink","Entire","window","undefined","document","body","useTheme","listItemState","setListItemState","handleItemFunctions","mobileOpen","setMobileOpen","handleDrawerToggle","AppBar","position","Toolbar","IconButton","edge","noWrap","itemListState","console","log","appBarcontents","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","keepMounted","Divider","List","xsDown","contents","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","exact","getElementById"],"mappings":"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","file":"static/js/main.7c2a321d.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst homeObj = {\n  key: 'HOME',\n  text: \"ホーム\"\n};\n\nconst loadObj = {\n  key: 'Load',\n  text: '転職までの経緯'\n};\n\nconst skillsObj = {\n  key: 'SKILLS',\n  text: 'スキルセット'\n};\n\nconst botObj = {\n  key: 'CHATBOT',\n  text: 'チャットボット'\n};\n\nexport { homeObj, loadObj, skillsObj, botObj };\n\nexport function MainListItems(props) {\n\n  return (\n\n    <div>\n      <ListItem button onClick={props.updateStateFunc[0]}>\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary={homeObj.text} />\n      </ListItem>\n      <ListItem button onClick={props.updateStateFunc[1]}>\n        <ListItemIcon>\n          <TimelineIcon />\n        </ListItemIcon>\n        <ListItemText primary={loadObj.text} />\n      </ListItem>\n      <ListItem button onClick={props.updateStateFunc[2]}>\n        <ListItemIcon>\n          <StarRateIcon />\n        </ListItemIcon>\n        <ListItemText primary={skillsObj.text} />\n      </ListItem>\n      {/* <ListItem button onClick={props.updateStateFunc[3]}>\n        <ListItemIcon>\n          <ChatIcon />\n        </ListItemIcon>\n        <ListItemText primary={botObj.text} />\n      </ListItem> */}\n    </div>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Title from '../common/Title';\n\nexport default function PaperItem(props) {\n\n  switch (props.name) {\n    case \"sitePurpose\":\n      return (\n        <React.Fragment>\n          <Title>当サイトの目的</Title>\n          <Typography  >\n            私、井上昂のポートフォリオとなります。<br />\n            2022年1月~3月を目処にして、<br />フロントエンドエンジニアとして転職を決断しました。<br />\n            当サイトを通じて、私のスキルや転職の経緯を<br />\n            知っていただければ幸いです。\n          </Typography>\n        </React.Fragment>\n      );\n\n    case \"baseProfile\":\n      return (\n        <React.Fragment>\n          <Title>プロフィール</Title>\n          <Typography variant=\"body2\">\n            井上昂(Takashi Inoue)<br />\n            1996年生まれ。24才。社会人3年目。<br />\n            大学卒業後、保険系SIerに就職。<br />\n            アプリケーション基盤チームで、<br />\n            基幹システムの構築に従事し、バックエンド中心に活躍。<br />\n            目指しているエンジニア像を実現できる環境を求めて転職を決意。\n\n          </Typography>\n          <Typography color=\"textSecondary\" paragraph>\n            mail：tabornn.work@gmail.com<br />\n            github：\n            <a href=\"https://github.com/tabornnn\">https://github.com/tabornnn</a>\n\n          </Typography>\n        </React.Fragment>\n      );\n\n    default:\n      return (\n        <React.Fragment>\n          Error!\n        </React.Fragment>\n      );\n  }\n\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  imgStyle: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    height: \"auto\",\n  },\n}));\n\nexport default function MyPicture() {\n  // スタイルのカスタマイズ。Hook式\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <img className={classes.imgStyle} src={`${ process.env.PUBLIC_URL }/takashi_4.JPG`} alt=\"Logo\" />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport PaperItem from './PaperItem'\nimport MyPicture from './MyPicture';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n// スタイルのカスタマイズ。Hook式\nconst useStyles = makeStyles((theme) => ({\n\n       paper: {\n              padding: theme.spacing(2),\n              display: 'flex',\n              // overflow: 'auto',\n              flexDirection: 'column',\n              margin: '0 auto',\n              justifyContent: 'center',\n              marginLeft: 10,\n              marginRight: 10,\n              // alignItems: 'center',\n       },\n\n       myPicture: {\n              marginTop: 20,\n       },\n       fixedPaper: {\n              marginTop: 20,\n       },\n       paperHalf: {\n              // display: 'flex',\n\n              width: '95%',\n              height: 120,\n              // marginTop: 20,\n              marginLeft: 10,\n              // textAlign: 'center',\n              // justifyContent: 'center',s\n              // alignItems: 'center'\n\n\n       },\n       flexContainer: {\n              padding: theme.spacing(2),\n              display: 'flex',\n              // overflow: 'auto',\n              flexDirection: 'column',\n              margin: '0 auto',\n              justifyContent: 'center',\n              // marginLeft: 10,\n              // marginRight: 10,\n              // alignItems: 'center',\n\n       },\n\n}));\n\n\nexport default function Home(props) {\n       const classes = useStyles();\n\n       const myPicture = clsx(classes.paper, classes.myPicture);\n       const fixedHeightPaper = clsx(classes.paper, classes.fixedPaper);\n       const paperHalf = classes.paperHalf\n       // const flexContainer = classes.flexContainer\n\n\n\n       return (\n              <>\n                     <Grid container spacing={1}>\n\n                            {/* Chart */}\n                            {/* xs,md,lgについては下記サイトを参照 */}\n                            {/* https://qiita.com/akatsuki174/items/53b7367b04ed0b066bbf */}\n                            <Grid item xs={12} md={6} lg={7}>\n                                   <Paper className={myPicture}>\n                                          <MyPicture />\n                                   </Paper>\n                            </Grid>\n                            {/* Recent Deposits */}\n                            <Grid item xs={12} md={6} lg={5}>\n                                   <Paper className={fixedHeightPaper}>\n                                          <PaperItem name={\"baseProfile\"} />\n                                   </Paper>\n                                   <br />\n                                   <br />\n\n                                   {/* <Grid container spacing={0}> */}\n                                   <Grid container spacing={2}>\n\n\n                                          <Grid item xs={6} md={6} lg={6}>\n                                                 <Card className={paperHalf}>\n                                                        <CardContent>\n                                                               {/* <Title>転職までの経緯</Title> */}\n                                                               <Typography component=\"h2\" variant=\"subtitle1\" color=\"primary\" gutterBottom>\n                                                                      転職までの経緯\n                                                               </Typography>\n                                                        </CardContent>\n\n                                                        <CardActions>\n                                                               <Button size=\"small\" onClick={props.updateStateFunc[1]}>&gt;&gt;詳しくみる</Button>\n                                                        </CardActions>\n                                                 </Card>\n                                          </Grid>\n\n                                          <Grid item xs={6} md={6} lg={6}>\n                                                 <Card className={paperHalf}>\n                                                        <CardContent>\n                                                               <Typography component=\"h2\" variant=\"subtitle1\" color=\"primary\" gutterBottom>\n                                                                      スキルセット\n                                                               </Typography>\n                                                               {/* <Typography color=\"textSecondary\">\n                                                                      現職の内容と、転職を決めた経緯を説明\n                                                               </Typography> */}\n                                                        </CardContent>\n\n                                                        <CardActions>\n                                                               <Button size=\"small\" onClick={props.updateStateFunc[2]}>\n                                                                      &gt;&gt;詳しくみる\n                                                               </Button>\n                                                        </CardActions>\n                                                 </Card>\n\n                                          </Grid>\n                                   </Grid>\n\n                            </Grid>\n                     </Grid>\n              </>\n       );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n       paper: {\n              maxWidth: \"90%\",\n              maxHeight: \"80%\",\n              backgroundColor: theme.palette.background.paper,\n              border: \"2px solid #000\",\n              boxShadow: theme.shadows[5],\n              padding: theme.spacing(2, 4, 3),\n              overflow: \"scroll\",\n       },\n       root: {\n              maxWidth: 345,\n       },\n       media: {\n              height: 140,\n       },\n       p: {\n              textIndent: 20,\n       },\n}));\n\nexport const LeftContent = React.forwardRef((props, ref) => {\n       const classes = useStyles();\n\n       return (\n              <>\n                     {/* <div style={modalStyle} className={classes.paper}> */}\n                     <div className={classes.paper}>\n                            <Typography gutterBottom variant=\"h7\" component=\"h2\">\n                                   現職の活動内容について\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   参加案件について\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   共済組合の学生向け商品に関して、契約管理システムをオープン化する対応。<br />\n                                   既存のホストや周辺システムとの整合性を担保しつつ、新規に契約管理システムを構築を実施。<br />\n                            </Typography>\n                            <br />\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   所属チームについて\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   アプリケーション基盤チームに所属。FWの構築や共通部品の作成などに従事。<br />\n                                   インフラチームとアプリチーム双方と連携を取りながら業務を進める。\n                                   <br />\n                            </Typography>\n                            <br />\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   経験業務について\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   <b>1 . 性能検証</b>\n                                   <br />\n                                   オンライン/バッチシステムの性能測定を担当し、\n                                   問題発見・原因究明・チューニング・顧客報告を遂行。<br /><br />\n\n                                   <b>2 . FW/共通部品の構築</b><br />\n                                   ・排他制御機構の設計開発<br />\n                                   ・業務アプリ側が利用する共通部品の作成<br />\n                                   ・DB2へのアクセス部品の作成。(ストアドプロシージャ/ファンクション)<br /><br />\n\n                                   <b>3 . テスト環境の構築</b><br />\n                                   Dockerを用いたテスト環境を構築<br /><br />\n\n                                   <b>4 . 認証基盤の構築</b><br />\n                                   Keycloakを利用し、周辺システムと認証基盤を統合<br /><br />\n\n                                   <b>5 . PMO</b><br />\n                                   チーム内のPMOとして各メンバーの業務遂行をサポート<br />\n                                   会議のファシリテータやWBSの更新、各メンバーへの作業指示を実施<br />\n                                   <br />\n                            </Typography>\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   実績\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n\n                                   <b>1 . システムの根幹となる排他制御機構の設計開発を遂行</b><br />\n                                   周辺システムとの整合性も考慮した排他制御機構を設計<br /><br />\n\n                                   <b>2 . オンライン、バッチの性能検証を担当し、作業計画、実施、結果の考察、チューニングを実施し顧客への報告を実施。</b><br />\n                                   <br />\n\n                                   <b>3. チーム内PMOとして、成果物管理や会議のファシリテータを担当し、プロジェクトの円滑化を推進</b><br />\n                            </Typography>\n                     </div>\n              </>\n       )\n})\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n       paper: {\n              maxWidth: \"90%\",\n              maxHeight: \"80%\",\n              backgroundColor: theme.palette.background.paper,\n              border: \"2px solid #000\",\n              boxShadow: theme.shadows[5],\n              padding: theme.spacing(2, 4, 3),\n              overflow: \"scroll\",\n       },\n       root: {\n              maxWidth: 345,\n       },\n       media: {\n              height: 140,\n       },\n       p: {\n              textIndent: 20,\n       },\n}));\n\nexport const CenterContent = React.forwardRef((props, ref) => {\n       const classes = useStyles();\n\n       return (\n              <>\n                     {/* <div style={modalStyle} className={classes.paper}> */}\n                     <div className={classes.paper}>\n                            <Typography gutterBottom variant=\"h7\" component=\"h2\">\n                                   転職を決意\n                            </Typography>\n\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   約2年半のITエンジニアの経験から明確になった「理想のエンジニア像」と<br />\n                                   実現するために求めている職場環境を説明いたします。\n                            </Typography>\n\n                            <br />\n\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   <b>エンジニアとしてのカバー領域について</b>\n                            </Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\" component=\"p\">\n                                   理想①：<u>システム全体を俯瞰できるようなフルスタックエンジニアになりたい</u>\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   <b>◇背景</b>  <br />\n                                   業務の中で、性能検証やFWの構築を経験し、<br />\n                                   エラーの原因特定や仕様変更による影響箇所の調査時など、<br />\n                                   システムを局所的ではなく、全体で見ることの重要性を実感。<br />\n                                   インフラからアプリまで幅広くカバーできるエンジニアを目指したい。       <br />\n                                   <br />\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   <b>◇現環境と求める環境</b><br />\n                                   技術的には、アプリ基盤チームという特性上、幅広い分野に触れることができているが、<br />\n                                   大規模システムであることで、情報収集時に別部署を跨ぐなどやりづらさを感じている。<br />\n                                   全体像を把握しやすい小〜中規模のシステム構築を担当してみたい。\n                                   <br />\n                            </Typography>\n                            <br />\n\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   <b>ビジネススキルについて</b>\n\n                            </Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\" component=\"p\">\n                                   理想②：<u>変化に対応できるエンジニアになりたい</u>\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n\n                                   <b>◇背景</b>  <br />\n\n                                   IT技術は日々進歩するため、常に最新のトレンドを追い求めるなど変化に対応しなければ、<br />\n                                   エンジニアとしての価値がなくなっていくと感じた。<br />\n                                   <br />\n\n                                   <b>◇現環境と求める環境</b><br />\n                                   保険系SIerということもあり、求められるのは「信頼性」や「確実性」。<br />\n                                   そのため最新技術の導入には非常に慎重で、何年も前のソースコードが未だに使用されている。<br />\n                                   中にいると、世の技術の変遷など感じることはあまりなく、<br />\n                                   このままでもずっと生きていけるような気がしてしまう。<br />\n                                   この状況に危機感を感じ、最新の技術を扱っている環境に身を置き、<br />\n                                   変化に対応できる人材になりたい。\n\n\n                            </Typography>\n\n                            <br />\n\n                            <Typography variant=\"subtitle2\" color=\"secondary\" component=\"p\">\n                                   理想③：<u>サービス志向型のエンジニアになりたい</u>\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   <b>◇背景</b>  <br />\n                                   自分たちが構築したシステムに関して、「ユーザーの反応がみたい！」と感じるようになり、<br />\n                                   サービス自体をどう改善していくのかという視点も持ったエンジニアになりたい。<br />\n\n                                   <br />\n                                   <b>◇現環境と求める環境</b><br />\n                                   現環境では、「ユーザーが決めた仕様をどう実現するか」という視点が強く、<br />\n                                   サービス自体について考えることはほとんどないと感じる。<br />\n                                   よりユーザーに近い視点で開発できるような環境に身を置きたい。<br />\n                            </Typography>\n                            <br />\n\n                            <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n                                   <b>自身の趣味嗜好について</b>\n                            </Typography>\n                            <Typography variant=\"subtitle2\" color=\"secondary\" component=\"p\">\n                                   理想④：<u>モダンなフロントエンド技術に触れたい</u>\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   <b>◇背景</b>  <br />\n\n                                   個人的に、SPAを実現するようなモダンなフロントエンド技術に興味があり、<br />\n                                   フルスタックを目指しつつも、フロントエンドはさらに特化しているような人材を目指しています。<br />\n                                   <br />\n                                   <b>◇現環境と求める環境</b><br />\n                                   現環境では、最新の技術が中々取り入れられないため、<br />\n                                   フロント技術は基本的なHTML・CSS・JavaScriptに触れる程度です。<br />\n                                   個人としてReactやTypeScriptを学習しているため、これらを活用できるような環境に身を置きたいです。<br />\n                            </Typography>\n                     </div>\n              </>\n       )\n})","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n       paper: {\n              maxWidth: \"90%\",\n              maxHeight: \"80%\",\n              backgroundColor: theme.palette.background.paper,\n              border: \"2px solid #000\",\n              boxShadow: theme.shadows[5],\n              padding: theme.spacing(2, 4, 3),\n              overflow: \"scroll\",\n       },\n       root: {\n              maxWidth: 345,\n       },\n       media: {\n              height: 140,\n       },\n       p: {\n              textIndent: 20,\n       },\n\n}));\n\nexport const RightContent = React.forwardRef((props, ref) => {\n       const classes = useStyles();\n\n       return (\n              <>\n                     {/* <div style={modalStyle} className={classes.paper}> */}\n                     <div className={classes.paper}>\n\n                            <Typography gutterBottom variant=\"h7\" component=\"h2\">\n                                   モダンなフロントエンド技術の学習\n                            </Typography>\n\n                            <Typography variant=\"caption\" color=\"textPrimary\" component=\"p\">\n                                   私自身の嗜好として「モダンなフロントエンド技術」に興味がありますが、<br />\n                                   業務上フロントエンドに関しては簡単なHTML・CSS・JavaScriptのみ。<br />\n                                   そのため個人で学習を進めており、<br />\n                                   目標を「<b>リッチなデザインのSPAをReactで構築できること</b>」に設定しました。<br />\n                                   仕事の合間をぬって学習を進めていき、<br />\n                                   結果として目標は達成できたと考えております。<br />\n                                   (当サイトもReact + Material UIの構成で構築しております。)<br /><br />\n\n\n                            </Typography>\n                     </div>\n              </>\n       )\n})","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { LeftContent } from \"./LeftContent\";\nimport { CenterContent } from \"./CenterContent\";\nimport { RightContent } from \"./RightContent\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n       icon: {\n              marginRight: theme.spacing(2),\n       },\n       heroContent: {\n              backgroundColor: theme.palette.background.paper,\n              padding: theme.spacing(8, 0, 6),\n       },\n       heroButtons: {\n              marginTop: theme.spacing(4),\n       },\n       cardGrid: {\n              paddingTop: theme.spacing(8),\n              paddingBottom: theme.spacing(8),\n       },\n       card: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n       },\n       cardMedia: {\n              paddingTop: '56.25%', // 16:9\n       },\n       cardContent: {\n              flexGrow: 1,\n       },\n\n       paper: {\n              maxWidth: '80% ',\n              maxHeight: '90%',\n              backgroundColor: theme.palette.background.paper,\n              border: \"2px solid #000\",\n              boxShadow: theme.shadows[5],\n              padding: theme.spacing(2, 4, 3)\n       },\n       modal: {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n       },\n\n}));\n\nexport default function LoadJobChange() {\n       const classes = useStyles();\n\n       const [openLeft, setOpenLeft] = React.useState(false);\n       const handleOpenLeft = () => {\n              setOpenLeft(true);\n       };\n       const handleCloseLeft = () => {\n              setOpenLeft(false);\n       };\n\n\n       const [openCenter, setOpenCenter] = React.useState(false);\n       const handleOpenCenter = () => {\n              setOpenCenter(true);\n       };\n       const handleCloseCenter = () => {\n              setOpenCenter(false);\n       };\n\n\n       const [openRight, setOpenRight] = React.useState(false);\n       const handleOpenRight = () => {\n              setOpenRight(true);\n       };\n       const handleCloseRight = () => {\n              setOpenRight(false);\n       };\n       return (\n              <React.Fragment>\n                     <CssBaseline />\n                     <main>\n                            {/* Hero unit */}\n                            <div className={classes.heroContent}>\n                                   <Container maxWidth=\"sm\">\n                                          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                                 これまでの歩み\n                                          </Typography>\n                                          <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                                                 私のこれまでの業務経験と、<br />\n                                                 転職に至るまでの経緯を説明します\n                                          </Typography>\n                                   </Container>\n                            </div>\n                            <Container className={classes.cardGrid} maxWidth=\"md\">\n                                   {/* End hero unit */}\n                                   <Grid container spacing={4}>\n                                          {/* {cards.map((card) => ( */}\n                                          <Grid item key={1} xs={12} sm={6} md={4}>\n                                                 <Card className={classes.card}>\n                                                        <CardMedia\n                                                               className={classes.cardMedia}\n                                                               image={`${ process.env.PUBLIC_URL }/workman.jpg`}\n                                                               title=\"Image title\"\n                                                        />\n                                                        <CardContent className={classes.cardContent}>\n                                                               <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                                      現職の活動内容\n                                                               </Typography>\n                                                               <Typography>\n                                                                      現職では、保険系SIerのアプリケーション基盤チームで、基幹システムの導入を実施しております。\n                                                               </Typography>\n                                                        </CardContent>\n                                                        <CardActions>\n                                                               <Button size=\"small\" color=\"primary\" onClick={handleOpenLeft}>\n                                                                      詳細\n                                                               </Button>\n                                                        </CardActions>\n                                                 </Card>\n                                                 <Modal\n                                                        className={classes.modal}\n                                                        aria-labelledby=\"transition-modal-title\"\n                                                        aria-describedby=\"transition-modal-description\"\n                                                        open={openLeft}\n                                                        onClose={handleCloseLeft}\n                                                        closeAfterTransition\n                                                        BackdropComponent={Backdrop}\n                                                        BackdropProps={{\n                                                               timeout: 500\n                                                        }}\n                                                 >\n                                                        <Fade in={openLeft}>\n                                                               <LeftContent />\n                                                        </Fade>\n                                                 </Modal>\n                                          </Grid>\n\n                                          <Grid item key={2} xs={12} sm={6} md={4}>\n                                                 <Card className={classes.card}>\n                                                        <CardMedia\n                                                               className={classes.cardMedia}\n                                                               image={`${ process.env.PUBLIC_URL }/hirameki.jpg`}\n                                                               title=\"Image title\"\n                                                        />\n                                                        <CardContent className={classes.cardContent}>\n                                                               <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                                                                      転職を決意\n                                                               </Typography>\n                                                               <Typography>\n                                                                      約2年半のITエンジニアとしての経験から、「理想のエンジニア像」が明確になりました。\n                                                                      より実現できる環境を求めて転職を決意。\n                                                               </Typography>\n                                                        </CardContent>\n                                                        <CardActions>\n                                                               <Button size=\"small\" color=\"primary\" onClick={handleOpenCenter}>\n                                                                      詳細\n                                                               </Button>\n                                                        </CardActions>\n                                                 </Card>\n                                                 <Modal\n                                                        className={classes.modal}\n                                                        aria-labelledby=\"transition-modal-title\"\n                                                        aria-describedby=\"transition-modal-description\"\n                                                        open={openCenter}\n                                                        onClose={handleCloseCenter}\n                                                        closeAfterTransition\n                                                        BackdropComponent={Backdrop}\n                                                        BackdropProps={{\n                                                               timeout: 500\n                                                        }}\n                                                 >\n                                                        <Fade in={openCenter}>\n                                                               <CenterContent />\n                                                        </Fade>\n                                                 </Modal>\n                                          </Grid>\n\n                                          <Grid item key={3} xs={12} sm={6} md={4}>\n                                                 <Card className={classes.card}>\n                                                        <CardMedia\n                                                               className={classes.cardMedia}\n                                                               image={`${ process.env.PUBLIC_URL }/study.jpg`}\n                                                               title=\"Image title\"\n                                                        />\n                                                        <CardContent className={classes.cardContent}>\n                                                               <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                                      フロント領域の学習\n                                                               </Typography>\n                                                               <Typography>\n                                                                      フロントエンドに関しては業務での関与が少ないため、独学で学習を進めています。\n                                                               </Typography>\n                                                        </CardContent>\n                                                        <CardActions>\n                                                               <Button size=\"small\" color=\"primary\" onClick={handleOpenRight}>\n                                                                      詳細\n                                                               </Button>\n\n                                                        </CardActions>\n                                                 </Card>\n                                                 <Modal\n                                                        className={classes.modal}\n                                                        aria-labelledby=\"transition-modal-title\"\n                                                        aria-describedby=\"transition-modal-description\"\n                                                        open={openRight}\n                                                        onClose={handleCloseRight}\n                                                        closeAfterTransition\n                                                        BackdropComponent={Backdrop}\n                                                        BackdropProps={{\n                                                               timeout: 500\n                                                        }}\n                                                 >\n                                                        <Fade in={openRight}>\n                                                               <RightContent />\n                                                        </Fade>\n                                                 </Modal>\n                                          </Grid>\n                                   </Grid>\n                            </Container>\n                     </main>\n\n              </React.Fragment>\n       );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating';\nimport Title from '../common/Title';\nimport Paper from '@material-ui/core/Paper';\n\n// Generate Order Data\nfunction createData(element, level, explain) {\n       return { element, level, explain };\n}\n\n// Rateのオブジェクトを返す関数\nconst levelDef = (level) => {\n       return (\n              <Rating name=\"read-only\" value={level} max={3} readOnly />\n       )\n}\n\nconst frontRows = [\n       createData(\"HTML\", levelDef(2), \"基本的な利用方法を理解し、webページを実装できる。\"),\n       createData(\"CSS\", levelDef(2), \"基本的な利用方法を理解し、webページを実装できる。\"),\n       createData(\"JavaScript\", levelDef(2), \"基本的な利用方法を理解し、動的なwebページを実装できる。\"),\n       createData(\"TypeScript\", levelDef(1), \"概念レベルの理解。学習中。\"),\n       createData(\"React\", levelDef(2), \"基本的な利用方法を理解し、CRUDアプリケーションを構築できる。(当サイトもReactを利用)\"),\n       createData(\"Materil UI\", levelDef(2), \"基本的な利用方法を理解し、Webサイトを構築できる。(当サイトもMaterilal UIを利用)\"),\n       createData(\"Thymeleaf\", levelDef(3), \"業務で利用経験があり、他者のコードをRvできるレベルである。\"),\n];\n\nconst backRows = [\n       createData(\"Java\", levelDef(3), \"当言語を利用してアプリケーションを構築でき、他者のコードRvを実施できる。\"),\n       createData(\"SQL\", levelDef(2), \"適切なSQL文の作成を実施できる。\"),\n       createData(\"Spring FW\", levelDef(2), \"FWの仕様に準拠したWebアプリケーションを構築できる。\"),\n       createData(\"Linux\", levelDef(2), \"シェルを通しての操作、シェルスクリプトを作成することができる。\"),\n       createData(\"Docker\", levelDef(2), \"コンテナの概念を理解し、環境を適切に扱うことができる。\"),\n];\n\nconst toolRows = [\n       createData(\"GitLab\", levelDef(3), \"開発ルールに準拠した適切な利用ができる。\"),\n       createData(\"Redmine\", levelDef(3), \"開発ルールに準拠した適切な利用ができる。\"),\n       createData(\"Slack\", levelDef(3), \"開発ルールに準拠した適切な利用ができる。\"),\n];\n\n\nconst useStyles = makeStyles((theme) => ({\n       paper: {\n              padding: theme.spacing(2),\n              display: 'flex',\n              overflow: 'auto',\n              flexDirection: 'column',\n       },\n       table: {\n              minWidth: 650,\n       },\n}));\n\nexport default function Skills() {\n       const classes = useStyles();\n       return (\n              <>\n                     <Paper className={classes.paper}>\n                            <Title>フロントエンド</Title>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                   <TableHead>\n                                          <TableRow>\n                                                 <TableCell width=\"15%\">技術要素</TableCell>\n                                                 <TableCell width=\"15%\">レベル</TableCell>\n                                                 <TableCell className={classes.table_explain} width=\"70%\">説明</TableCell>\n                                          </TableRow>\n                                   </TableHead>\n                                   <TableBody>\n                                          {frontRows.map((row) => (\n                                                 <TableRow key={row.element}>\n                                                        <TableCell>{row.element}</TableCell>\n                                                        <TableCell>{row.level}</TableCell>\n                                                        <TableCell>{row.explain}</TableCell>\n                                                        <TableCell>{row.paymentMethod}</TableCell>\n                                                        <TableCell align=\"right\">{row.amount}</TableCell>\n                                                 </TableRow>\n                                          ))}\n                                   </TableBody>\n                            </Table>\n                     </Paper>\n                     <br /><br />\n                     <Paper className={classes.paper}>\n                            <Title>バックエンド</Title>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                   <TableHead>\n                                          <TableRow>\n                                                 <TableCell width=\"15%\">技術要素</TableCell>\n                                                 <TableCell width=\"15%\">レベル</TableCell>\n                                                 <TableCell width=\"70%\">説明</TableCell>\n                                                 {/* <TableCell align=\"right\">Sa？le Amount</TableCell> */}\n                                          </TableRow>\n                                   </TableHead>\n                                   <TableBody>\n                                          {backRows.map((row) => (\n                                                 <TableRow key={row.element}>\n                                                        <TableCell>{row.element}</TableCell>\n                                                        <TableCell>{row.level}</TableCell>\n                                                        <TableCell>{row.explain}</TableCell>\n                                                        <TableCell>{row.paymentMethod}</TableCell>\n                                                        <TableCell align=\"right\">{row.amount}</TableCell>\n                                                 </TableRow>\n                                          ))}\n                                   </TableBody>\n                            </Table>\n                     </Paper>\n                     <br /><br />\n                     <Paper className={classes.paper}>\n                            <Title>ツール類</Title>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                   <TableHead>\n                                          <TableRow>\n                                                 <TableCell width=\"15%\">技術要素</TableCell>\n                                                 <TableCell width=\"15%\">レベル</TableCell>\n                                                 <TableCell width=\"70%\">説明</TableCell>\n                                                 {/* <TableCell align=\"right\">Sa？le Amount</TableCell> */}\n                                          </TableRow>\n                                   </TableHead>\n                                   <TableBody>\n                                          {toolRows.map((row) => (\n                                                 <TableRow key={row.element}>\n                                                        <TableCell>{row.element}</TableCell>\n                                                        <TableCell>{row.level}</TableCell>\n                                                        <TableCell>{row.explain}</TableCell>\n                                                        <TableCell>{row.paymentMethod}</TableCell>\n                                                        <TableCell align=\"right\">{row.amount}</TableCell>\n                                                 </TableRow>\n                                          ))}\n                                   </TableBody>\n                            </Table>\n                     </Paper>\n              </>\n       )\n}\n\n","export default function Skills() {\n       return (\n              <>\n                     現在サービス構築中です。\n              </>\n       )\n}\n\n","import React from 'react';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { MainListItems } from './listItems';\r\nimport { homeObj, loadObj, skillsObj, botObj } from './listItems'\r\nimport Home from './home/Home'\r\nimport LoadJobChange from './loadJobChange/LoadJobChange';\r\nimport Skills from './skills/Skills';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport PropTypes from 'prop-types';\r\nimport Chatbot from './chatbot/Chatbot'\r\n\r\n\r\n// function Copyright() {\r\n//     return (\r\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//             {'Copyright © '}\r\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//                 Takashi Inoue\r\n//             </Link>{' '}\r\n//             {new Date().getFullYear()}\r\n//             {'.'}\r\n//         </Typography>\r\n//     );\r\n// }\r\n\r\nconst drawerWidth = 240;\r\n\r\n// スタイルのカスタマイズ。Hook式\r\nconst useStyles = makeStyles((theme) => ({\r\n    // flexボックスを利用\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        // overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(1),\r\n        // paddingBottom: theme.spacing(4),\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: `calc(100% - ${ drawerWidth }px)`,\r\n            marginLeft: drawerWidth\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function Entire(props) {\r\n\r\n    const { window } = props;\r\n    const container =\r\n        window !== undefined ? () => window().document.body : undefined;\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    // メニューのどのアイテムを押下している状態を判定するstate\r\n    const [listItemState, setListItemState] = React.useState(homeObj.key);\r\n    const handleHomeItem = () => {\r\n        setListItemState(homeObj.key);\r\n    };\r\n    const handleProfileItem = () => {\r\n        setListItemState(loadObj.key);\r\n    };\r\n    const handleCareerItem = () => {\r\n        setListItemState(skillsObj.key);\r\n    };\r\n    const handleChatbotItem = () => {\r\n        setListItemState(botObj.key);\r\n    };\r\n    //更新関数の集約\r\n    const handleItemFunctions = [handleHomeItem, handleProfileItem, handleCareerItem, handleChatbotItem];\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    // itemListStateとコンテンツを紐付け\r\n    const contents = (itemListState) => {\r\n        switch (itemListState) {\r\n            case homeObj.key:\r\n                return (\r\n                    <Home updateStateFunc={handleItemFunctions} />\r\n                )\r\n            case loadObj.key:\r\n                return (\r\n                    <LoadJobChange />\r\n                )\r\n            case skillsObj.key:\r\n                return (\r\n                    <div>\r\n                        <Skills />\r\n                    </div>\r\n                )\r\n            case botObj.key:\r\n                return (\r\n                    <div>\r\n                        <Chatbot />\r\n                    </div>\r\n                )\r\n            default:\r\n                console.log(\"default\");\r\n        }\r\n    }\r\n\r\n    // itemListStateとコンテンツを紐付け\r\n    const appBarcontents = (itemListState) => {\r\n        switch (itemListState) {\r\n            case homeObj.key:\r\n                return (\r\n                    homeObj.text\r\n                )\r\n            case loadObj.key:\r\n                return (\r\n                    loadObj.text\r\n                )\r\n            case skillsObj.key:\r\n                return (\r\n                    skillsObj.text\r\n                )\r\n            case botObj.key:\r\n                return (\r\n                    botObj.text\r\n                )\r\n            default:\r\n                console.log(\"default\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {/* CssBaselineは各ブラウザの差異を平均化させる役割 */}\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        {/* 画面が小さい時のみ表示される */}\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    {/* variantで文字サイズを定義 */}\r\n                    <Typography component=\"h1\" variant=\"h5\" color=\"inherit\" noWrap className={classes.title}>\r\n                        <div>{appBarcontents(listItemState)}</div>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        <Divider />\r\n                        <List><MainListItems updateStateFunc={handleItemFunctions} /></List>\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        <Divider />\r\n                        <List><MainListItems updateStateFunc={handleItemFunctions} /></List>\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    {/* litemListStateごとのコンテンツを表示させる */}\r\n                    {contents(listItemState)}\r\n                    {/* <Box pt={4}>\r\n                        <Copyright />\r\n                    </Box> */}\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\nEntire.propTypes = {\r\n    window: PropTypes.func,\r\n};\r\n","import './App.css';\nimport Entire from './components/Entire';\n\n\nfunction App() {\n  return (\n    <>\n      <Entire />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Entire from './components/Entire';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      {/* ReactRouterの設定 */}\n      {/* exactはpathのurlと完全一致した時、という意味 */}\n      <Route path=\"/top\" component={Entire} />\n      <Route exact path=\"/\" component={App} />\n\n\n    </Switch>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}